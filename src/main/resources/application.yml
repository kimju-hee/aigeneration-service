server:
  port: 8081

spring:
  application:
    name: aigeneration

  profiles:
    active: default

  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl

  cloud:
    stream:
      kafka:
        binder:
          brokers: kafka.default.svc.cluster.local:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          destination: miniprojectjo
          group: aigeneration
          contentType: application/json
          consumer:
            configuration:
              value.deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
              spring.json.trusted.packages: "miniprojectjo.domain.*,miniprojectjo.infra.*"
        event-out:
          destination: miniprojectjo
          contentType: application/json

  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

ai:
  openai:
    api-key: ${OPENAI_API_KEY}

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
